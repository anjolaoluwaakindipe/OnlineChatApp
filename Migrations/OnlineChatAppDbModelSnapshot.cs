// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using OnlineChatApp.Models;

#nullable disable

namespace OnlineChatApp.Migrations
{
    [DbContext(typeof(OnlineChatAppDb))]
    partial class OnlineChatAppDbModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("OnlineChatApp.Models.FriendRequest", b =>
                {
                    b.Property<int>("FriendRequestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("FriendRequestId"));

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("TIMESTAMP");

                    b.Property<int>("FriendRequestFromId")
                        .HasColumnType("integer");

                    b.Property<string>("FriendRequestStatus")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("FriendRequestToId")
                        .HasColumnType("integer");

                    b.HasKey("FriendRequestId");

                    b.HasIndex("FriendRequestFromId");

                    b.HasIndex("FriendRequestToId");

                    b.ToTable("FriendRequests");
                });

            modelBuilder.Entity("OnlineChatApp.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("UserId"));

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("TIMESTAMP");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("Firstname")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Lastname")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("text")
                        .HasColumnName("password");

                    b.Property<string>("UserRole")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Username")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("OnlineChatApp.Models.FriendRequest", b =>
                {
                    b.HasOne("OnlineChatApp.Models.User", "FriendRequestFrom")
                        .WithMany("FriendRequest")
                        .HasForeignKey("FriendRequestFromId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OnlineChatApp.Models.User", "FriendRequestTo")
                        .WithMany()
                        .HasForeignKey("FriendRequestToId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FriendRequestFrom");

                    b.Navigation("FriendRequestTo");
                });

            modelBuilder.Entity("OnlineChatApp.Models.User", b =>
                {
                    b.Navigation("FriendRequest");
                });
#pragma warning restore 612, 618
        }
    }
}
